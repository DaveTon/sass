
/*------------------------------   complexinput   ------------------------------*/

@include comp(eu-complex-input){
    $_margin:getSpace($height-input,0,$line-height-normal);

    @include main{
        @include flex(column);
        @include space(margin,(-$_margin) null (-$_margin));
        
        border-color: rgba($color-grey-lighter, .5);
        border-radius:$radius;
        outline:0;
        box-shadow: 0 0 0 1px $color-grey-lighter inset;
    }

    @include state-active{
        @extend .eu-complex-input:hover;
    }

    @include state-disable{
        /*background-color: rgba($color-grey-lighter, .2);*/
        pointer-events: none;
        color: rgba($color-black, .1);
        box-shadow: 0 0 0 1px rgba($color-grey-lighter, .5) inset;
    }
    
    > * {
        @include modifier(flex-solid, true){
            @include shape(100% 0, null);
        }
    }

    > .eu-content {
        padding: 0 $padding/2;
        > * { vertical-align: middle;}
    }

    > *,
    > .contenteditor{
        border: none;
        box-shadow: none;
        margin: 0;

        @include state-hover{
            border: none;
            box-shadow: none;
        }

        @include state-active{
            border: none;
            box-shadow: none;
        }
    }

    > .eu-type-selector{
        min-width: $width-input-small;
    }

    > .eu-button{
        margin-top: getSpace($height-input, 0, $height-button)
    }
    
    @include modifier(title, true){
        @include state-hover{
            box-shadow: 0 0 0 1px $color-primary inset,
                $shadow-input;
        }
    }
    
    @include modifier(row, true){
        > *:first-child {
            @include shape(null, null, $radius $radius 0 0);
        }
        
        > *:not(:first-child) {
            @include shape(null, null, 0 0 $radius $radius);
            
            border-top: 1px solid;
            border-color: inherit;
        }
    }
}

/*----------------------
           Row
----------------------*/

@include comp(eu-complex-input){
    @include modifier(row){
        @include prefixer(flex-direction,row,$prefix);

        > *:first-child {
            @include shape(null, null, $radius 0 0 $radius);
        }

        > *:not(:first-child) {
            @include shape(null, null, 0 $radius $radius 0);
            
            border-left: 1px solid;
            border-color: inherit;
        }
    }
}

/*----------------------
          Title
----------------------*/

@include comp(eu-complex-input){
    @include modifier(title row){
        @include font($font-size-h2, $line-height-normal, null, 700);
        position:relative;
        box-shadow: none;

        @include state-hover{
            &::before{ border-color: $color-primary;}
        }

        @include state-active{
            &::before{ border-color: $color-primary;}
        }

        &::before{
            @include shape(100%,1px);
            @include border(0 0 1px 0,$color-grey-light);
            @include position(null null 0 0,absolute);
            
            display: block;
            background-color: transparent;
            /*box-shadow: $shadow-sub;*/
            content: " ";
        }

        > * {
            border: none;
            box-shadow: none;
        }

        > .eu-type-selector{
            @include font(inherit, inherit, null, inherit);
            /*
            @extend .eu-type-selector.title;
            font-weight: normal;
            .text.default, .text:not(.default){
                font-size: $font-size-normal;
            }*/
        }
    }
}

/*----------------------
         Note
----------------------*/

@include comp(eu-complex-input){
    @include modifier(note){
        box-shadow: 0 0 0 1px $color-note inset;

        @include modifier(title, true){
            @include state-hover{
                box-shadow: 0 0 0 1px $color-note inset, $shadow-input;
            }

            @include state-active{
                box-shadow: 0 0 0 1px $color-note inset, $shadow-input;
            }
        }
    }
}